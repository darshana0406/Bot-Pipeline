apply plugin: 'java'
apply plugin: 'eclipse'

configurations {
    implementation
}

repositories {
    jcenter()
    mavenCentral()
    //url "https://gitlab.spectrumflow.net/c-meenakshi.kaeley/botpipeline.git"
}

dependencies {
    implementation 'org.json:json:20210307'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-nop:1.7.36'
    //implementation 'org.eclipse.jgit:org.eclipse.jgit:6.7.0.202309050840-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:4.9.10.201904181027-r'
    implementation 'org.slf4j:slf4j-simple:2.0.6'
    implementation 'org.apache.commons:commons-io:1.3.2'
   
   // implementation 'org.eclipse.jgit:org.eclipse.jgit:6.7.0.202309050840-r'
    //implementation 'org.json:json:20210307'
   // implementation files('lib/slf4j-api-2.0.6.jar')
   // implementation files('lib/slf4j-simple-2.0.6.jar')  
    //implementation files('lib/org.apache.commons.io.jar')
}


task runJava(type: JavaExec) {
  main = 'ExportBot' // Replace 'HelloWorld' with the name of your main class if different
  //  main = 'GitHubClone'
    classpath = sourceSets.main.runtimeClasspath
    
    doFirst  {       
        def botName = project.getProperty('BOT_NAME')
        def env = project.getProperty('ENVIRONMENT')
        def exportType = project.getProperty('ACTION')
        // def env1 = "$env"
        // def exportType1 = "$exportType"
        println "Chosen Value of ENV : $env"
        println "Chosen Value of Export Type : $exportType"
        println "Chosen Value of BotName: $botName"
        // println "Chosen Value of ENV1 : $env1"
        // println "Chosen Value of Export Type1 : $exportType1"
        args botName,exportType, env
       
    }
    
}

task runJavaC(type: JavaExec) {
  //  main = 'ExportENV' // Replace 'HelloWorld' with the name of your main class if different
    main = 'GitHubClone'
    classpath = sourceSets.main.runtimeClasspath
    
    doFirst  {       

        def env1 = project.getProperty('ENVIRONMENT')
        def exportType1 = project.getProperty('ACTION')
        println "Chosen Value of ENV : $env1"
        println "Chosen Value of Export Type : $exportType1"
        args exportType1, env1
       
    }
    
}
task runJavaI(type: JavaExec) {
    main = 'UI' // Replace 'HelloWorld' with the name of your main class if different
    classpath = sourceSets.main.runtimeClasspath

    //code added for import args Sep12

     doFirst  {       

        def env = project.getProperty('ENVIRONMENT')
        def importType = project.getProperty('ACTION')
       // def tagName =  project.getProperty('GIT_TAG')
       println "Chosen Value of ENV : $env"
        println "Chosen Value of Export Type : $importType"
        args importType , env
        //args importType , env, tagName
        
}
}

task runJavaR(type: JavaExec) {
    main = 'GitFileAdder' // Replace 'HelloWorld' with the name of your main class if different
    classpath = sourceSets.main.runtimeClasspath
}
task runJavaZ(type: JavaExec) {
    main = 'FileDownloadRepo' // Replace 'HelloWorld' with the name of your main class if different
    classpath = sourceSets.main.runtimeClasspath
}